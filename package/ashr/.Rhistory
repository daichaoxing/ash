v2 = 4/n0[1]
s = seq(0,0.8,0.01); s2 = s^2
plot(s,log10(sqrt(v2/(v2+s2))*exp(s2*z2/(2*(v2+s2)))),ylim=c(0,5),lwd=2,type="l")
for(j in 2:4){
v2 = 4/n0[j]
lines(s,log10(sqrt(v2/(v2+s2))*exp(s2*z2/(2*(v2+s2)))),lwd=2,col=j)
}
z = qnorm(1-0.5*5e-7)
s = seq(0,0.8,length=100)
plot(s,log10(abf(z,2/500,s^2)),type="l",xlab="sigma_a",ylab="log10(BF)",lwd=3,ylim=c(0,5))
lines(W,log10(abf(z,2/500,W)), col=2)
lines(W,log10(abf(z,2/250,W)), col=3)
lines(s,log10(abf(z,1/10+1/10,s^2)), col=5,lwd=3)
lines(s,log10(abf(z,1/30+1/30,s^2)), col=4,lwd=3)
lines(s,log10(abf(z,1/100+1/100,s^2)), col=3,lwd=3)
lines(W,log10(abf(z,1/200+1/200,W)), col=2)
text(0.3,log10(abf(z,1/10+1/10,0.3)),"nmin=10",col=5)
text(0.2,log10(abf(z,1/30+1/30,0.2)),"nmin=30",col=4)
text(0.13,log10(abf(z,1/100+1/100,0.13)),"nmin=100", col=3)
text(0.05,log10(abf(z,1/500+1/500,0.05)),"nmin=500", col=1)
z = qnorm(1-0.5*5e-7)
s = seq(0,0.8,length=100)
plot(s,log10(abf(z,2/500,s^2)),type="l",xlab="sigma_a",ylab="log10(BF)",lwd=3,ylim=c(0,5))
lines(W,log10(abf(z,2/500,W)), col=2)
lines(W,log10(abf(z,2/250,W)), col=3)
lines(s,log10(abf(z,1/10+1/10,s^2)), col=5,lwd=3)
lines(s,log10(abf(z,1/30+1/30,s^2)), col=4,lwd=3)
lines(s,log10(abf(z,1/100+1/100,s^2)), col=3,lwd=3)
lines(W,log10(abf(z,1/200+1/200,W)), col=2)
text(0.3,log10(abf(z,1/10+1/10,0.3)),"nmin=10",col=5)
text(0.2,log10(abf(z,1/30+1/30,0.2)),"nmin=30",col=4)
text(0.13,log10(abf(z,1/100+1/100,0.13)),"nmin=100", col=3)
text(0.05,log10(abf(z,1/500+1/500,0.05)),"nmin=500", col=1)
z = qnorm(1-0.5*5e-7)
s = seq(0,0.8,length=100)
plot(s,log10(abf(z,2/500,s^2)),type="l",xlab="sigma_a",ylab="log10(BF)",lwd=3,ylim=c(0,5))
lines(W,log10(abf(z,2/500,W)), col=2)
lines(W,log10(abf(z,2/250,W)), col=3)
lines(s,log10(abf(z,1/10+1/10,s^2)), col=5,lwd=3)
lines(s,log10(abf(z,1/30+1/30,s^2)), col=4,lwd=3)
lines(s,log10(abf(z,1/100+1/100,s^2)), col=3,lwd=3)
lines(W,log10(abf(z,1/200+1/200,W)), col=2)
text(0.3,log10(abf(z,1/10+1/10,0.3^2)),"nmin=10",col=5)
text(0.2,log10(abf(z,1/30+1/30,0.2^2)),"nmin=30",col=4)
text(0.13,log10(abf(z,1/100+1/100,0.13^2)),"nmin=100", col=3)
text(0.05,log10(abf(z,1/500+1/500,0.05^2)),"nmin=500", col=1)
qnorm(5e-7)
qnorm(1-5e-7)
q()
?t.test
hist(rbeta(1000,1,0.5))
example = function(x){return(x>5)}
example(7)
example(3)
example = function(y){return(y>5)}
pca
?pca
?princomp
q()
y = cbind(rnorm(10,0,1),rnorm(10,0,1))
y
x = matrix(0,nrow=10,ncol=1000)
for(i in 1:1000){x[,i] = rnorm(10)}
dim(x)
t(y) %*% y
d1 = rep(0,1000)
lm(y[,1] ~ x[,1])
lm(y[,1] ~ x[,1])$res
lm(y[,1] ~ x[,1])$res %*% lm(y[,2] ~ x[,1]$res
)
lm(y[,1] ~ x[,1])$res %*% lm(y[,2] ~ x[,1])$res
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res);
rss1 = t(res) %*% res
d[i] = det(rss1)
}
rss
rss0
d1 = d
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res); rss1=t(res) %*% res; d[i] = det(rss1); d1 = det(0.5*rss0 + 0.5*rss1)}
rss0 = t(y) %*% y
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res); rss1=t(res) %*% res; d[i] = det(rss1); d1 = det(0.5*rss0 + 0.5*rss1)}
plotd,d1
plot(d,d1)
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res); rss1=t(res) %*% res; d[i] = det(rss1); d1[i] = det(0.5*rss0 + 0.5*rss1)}
plot(d,d1)
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res); rss1=t(res) %*% res; d[i] = det(rss1); d1[i] = det(0.9*rss0 + 0.1*rss1)}
plot(d,d1)
for(i in 1:1000){res = cbind(lm(y[,1]~x[,i])$res,lm(y[,2] ~x[,i])$res); rss1=t(res) %*% res; d[i] = det(rss1); d1[i] = det(0.99*rss0 + 0.01*rss1)}
plot(d,d1)
X = rgamma(1000,1,1/7)
X = rgamma(7000,1,1/7)
?rdirich
?dirichlet
help.start()
load("compositions")
install.package("compositions")
install.packages("compositions")
load("compositions")
install.packages("compositions")
load("compositions")
exp(1)
exp(10)
log10(exp(10))
log10(exp(15))
-exp(1) * p * log(p)
p = 1e-8
-exp(1) * p * log(p)
(-exp(1) * p * log(p))^-1
log10((-exp(1) * p * log(p))^-1)
p = 3e-8
log10((-exp(1) * p * log(p))^-1)
p = 5e-8
log10((-exp(1) * p * log(p))^-1)
hist(rpois(1000,3))
dpois(1:10,3)
dpois(0:10,3)
qpois(0:10,3)
ppois(0:10,3)
?cor
?rank
rank(c(1,2,1,3,1,2))
x = rbinom(100,2,0.2)
y = rnom(100)
y = rnorm(100)
y = rbinom(100,1,0.4)
glm(y~x,family=binomial)
summary(glm(y~x,family=binomial))
summary(glm(y~x,family=binomial))$f
summary(glm(y~x,family=binomial))$fstat
names(summary(glm(y~x,family=binomial)))
(summary(glm(y~x,family=binomial))$deviance
)
1000*1.05^112
1000*1.05^100
?manova
?summary.manova
library("haarfisz")
library(haarfisz)
q()
258/150
hdf5
z = rnorm(2,1)
z = rnorm(1000,mean=2,1)
p = pnorm(z)
hist(p)
hist(1-p)
z = rnorm(1000,mean=1,1)
p = pnorm(z)
hist(1-p)
z = rnorm(1000,mean=.5,1)
p = pnorm(z)
hist(1-p)
install.packages("knitr")
s = "btpsffsttbppsffppsffstbbpstbtpfstfbtbpstfspbbtsffsfptbtsppftpsbbst
btpsfpbsftpbp
btpsfpbtpsbftpfbtsbfsptbspfstfbtspbtffpsbpsfttbpspftfbbsptbptsfftpbfssppsffstbbpstbttsfbftpfbss
"
length(s)
s = split(s,"")
s
?split
s = s$1
s = s[[1]]
s
?paste
?strsplit
ss = strsplit(s, split="")
ss
sum(ss=="b")
sum(ss[[1]]=="b")
hist(ss[[1]])
barchart(ss[[1]])
?hist
?barchart
barplot(ss[[1]])
?barplot
table(ss[[1]])
ss[[1]]
tt = ss[[1]]
tt = tt[-1]
tt
u = cbind(tt,ss[[1]][-176])
u
u = cbind(tt,ss[[1]][-177])
u
u = cbind(ss[[1]][-177],tt)
u
table(u[,2][u[,1]=="b"])
table(u[,2][u[,1]=="f"])
table(u[,2][u[,1]=="t"])
table(u[,2][u[,1]=="p"])
table(u[,2][u[,1]=="s"])
?crosstab
?table
table(u[,1],u[,2])
?ragged
??ragged
install.packages("wavelets")
?wavelets
library(wavelets)
?wavelets
?dwt
dwt
J = 2^10
npeak = 5
peakcenters = sample(1:J,5,replace=F)
peakwidth = rep(50,npeak)
mu = 100*(rowSums(matDens(1:J,peakcenters,peakwidth)) + 0.002)
x = rpois(J,mu)
plot(mu,type="l",xlab="base",ylab="intensity",ylim=c(0,max(mu)),main="Poisson intensity")
abline(v=peakcenters,col="red")
plot(x, main="Simulated Poisson data")
set.seed(100)
library("mixfdr") # I use the function matDens to compute mixture density
J = 2^10
npeak = 5
peakcenters = sample(1:J,5,replace=F)
peakwidth = rep(50,npeak)
mu = 100*(rowSums(matDens(1:J,peakcenters,peakwidth)) + 0.002)
x = rpois(J,mu)
plot(mu,type="l",xlab="base",ylab="intensity",ylim=c(0,max(mu)),main="Poisson intensity")
abline(v=peakcenters,col="red")
plot(x, main="Simulated Poisson data")
dwt(x)
dwt(x,fast=FALSE)
system.time(dwt(x))
dim(x)
length(x)
J = 2^20
npeak = 5
peakcenters = sample(1:J,5,replace=F)
peakwidth = rep(50,npeak)
mu = 100*(rowSums(matDens(1:J,peakcenters,peakwidth)) + 0.002)
x = rpois(J,mu)
plot(mu,type="l",xlab="base",ylab="intensity",ylim=c(0,max(mu)),main="Poisson intensity")
abline(v=peakcenters,col="red")
plot(x, main="Simulated Poisson data")
dim(x)
length(x)
system.time(dwt(x))
source("~/Documents/teaching/Workshop2013/stat45800/code/Rcode/PoissonBinomial.funcs.R")
haar.aggregate
system.time(haar.aggregate(x))
system.time(dwt(x))
dwt
J = 2^20
J = 2^10
bintest.haar
bintest
x=0
ash
setwd("~/Documents/git/ash/package/ashr")
install("../ashr")
require(devtools)
require(roxygen2)
install("../ashr")
EMest
EM
ash
ashr
library(ashr)
EMest
ash
?install
options()
options()$dev
options(devtools.install.args)
args(devtools.install.args)
?install.github
?devtools::install.github
library(devtools)
?devtools::install.github
?install.github
??install.github
install.github(ash,"stephens999",subdir="package/ashr")
install_github(ash,"stephens999",subdir="package/ashr")
install_github(ash,user="stephens999",subdir="package/ashr")
install_github(ash,user="stephens999",subdir="package")
?closure
install_github(ash,user='stephens999',subdir='package')
install_github('ash',user='stephens999',subdir='package')
install_github('ash',user='stephens999',subdir='package/ashr')
?install
has_devel()
?build
build(binary=FALSE)
install.packages("ashr_0.1.tar.gz",repos=NULL,type="source")
system("ls")
pwd
setwd("~/Documents/git/ash/package/ashr")
setwd("~/Documents/git/ash/package/ashr")
install.packages("ashr_0.1.tar.gz",repos=NULL,type="source")
build(binary=FALSE)
install.packages("../ashr_0.1.tar.gz",repos=NULL,type="source")
ash
library("ashr")
ash
?ash
?ashr::ash
?ashr
?version
R.version()
R.Version()
