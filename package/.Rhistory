x
x = 1:10
names(x)="kernel"
x
class(x)
class(x)= "normalsdvec"
x
names(x)="NULL"
names(x)=NULL
x
x+1
x+3
normalmix = function(pi,mean,sd){
structure(data.frame(pi,mean,sd),class="normalmix")
}
normalmix(c(0.5,0.5),c(0,0),c(1,1))
temp = normalmix(c(0.5,0.5),c(0,0),c(1,1))
temp
temp$pi
class(temp)
source('~/.active-rstudio-document', echo=TRUE)
temp = normalmix(c(0.5,0.5),c(0,0),c(1,1))
dens(temp)
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
methods(normalmix)
methods(dens)
source('~/Documents/git/ash/Rcode/normalmix.R')
dens(temp,y=2)
dens(temp,y=seq(-1,1,length=100))
plot(dens(temp,y=seq(-1,1,length=100)))
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
matdens(temp,x)
matdnorm(x, temp$mean,temp$sigma)
matdnorm(x, temp$mean,temp$sd)
isequal(matdens(temp,x),matdnorm(x, temp$mean,temp$sd))
allequal(matdens(temp,x),matdnorm(x, temp$mean,temp$sd))
all.equal
all.equal(matdens(temp,x),matdnorm(x, temp$mean,temp$sd))
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
source('~/Documents/git/ash/Rcode/normalmix.R')
dunif
?dunir
source('~/Documents/git/ash/Rcode/normalmix.R')
rm(dens.unimix)
source('~/Documents/git/ash/Rcode/normalmix.R')
temp = normalmix(c(0.5,0.5),c(-3,2),c(1,1))
x = seq(-5,5,length=100)
plot(x,dens(temp,x))
all.equal(matdens(temp,x),matdnorm(x, temp$mean,temp$sd))
temp2 = unimix(c(0.5,0.5),c(-2,2),c(1,1))
dens(temp2)
plot(x,dens(temp2,x))
plot(x,dens(temp,x),type="l")
all.equal(matdens(temp,x),matdnorm(x, temp$mean,temp$sd))
temp2 = unimix(c(0.5,0.5),c(-2,2),c(1,1))
plot(x,dens(temp2,x),type="l")
source('~/Documents/git/ash/Rcode/normalmix.R')
?ifelse
>=
?>=
?>
??>
?">"
source('~/Documents/git/ash/Rcode/mix.R')
compcdf_post(temp2,0,c(1,2,3),c(10,10,10))
tmp
source('~/Documents/git/ash/Rcode/mix.R')
compcdf_post(temp2,0,c(1,2,3),c(10,10,10))
compcdf_post(temp2,-2,c(-2),c(0.1))
temp2
temp2$pi
length(temp2$pi)
compcdf_post(temp2,0,c(1,2,3),c(10,10,10))
plot(x,dens_conv(temp2,x,0.2),type="l")
plot(x,dens(temp2,x),type="l")
source('~/Documents/git/ash/Rcode/mix.R')
densplot(temp2)
dens_plot(temp2)
compcdf_post(temp2,-2,c(-2),c(0.1))
compcdf_post(temp2,-2,c(-2,3),c(0.1,1))
?vapply
mylist <- list(a=1,b=2,c=3)
myfxn <- function(var1,var2){
var1*var2
}
var2 <- 2
sapply(mylist,myfxn,var2=var2)
mylist <- list(a=1,b=2,c=3)
myfxn <- function(var1,var2){
var1*var2
}
var2 <- 2
sapply(mylist,myfxn,var2=2)
mylist <- list(a=1,b=2,c=3)
myfxn <- function(var1,var2){
var1*var2
}
var2 <- 2
sapply(mylist,myfxn,var1=2)
mfxn = function(var1,var2) var2
mylist <- list(a=1,b=2,c=3)
myfxn <- function(var1,var2){
var1*var2
}
var2 <- 2
sapply(mylist,myfxn,var1=1)
mylist
mylist <- list(a=1,b=2,c=3)
myfxn <- function(var1,var2){
var1*var2
}
var2 <- 2
sapply(mylist,myfxn,var2=1)
myfxn
myfxn = function(var1,var2){var2}
sapply(mylist,myfxn,var1=1)
sapply(mylist,myfxn,var2=1)
vapply(x,compcdf_post,m=temp2,betahat = c(1,2,3),betahatsd = c(10,10,10))
vapply(x,compcdf_post,c(1,1,1),m=temp2,betahat = c(1,2,3),betahatsd = c(10,10,10))
vapply(x,compcdf_post,FUN.VALUE=c(1,1,1),m=temp2,betahat = c(1,2,3),betahatse = c(10,10,10))
vapply(x,compcdf_post,FUN.VALUE=c(1,1,1),m=temp2,betahat = c(1,2,3),sebetahat = c(10,10,10))
vapply(x,cdf_post,FUN.VALUE=c(1,1,1),m=temp2,betahat = c(1,2,3),sebetahat = c(10,10,10))
x_cdf = vapply(x,cdf_post,FUN.VALUE=c(1,1,1),m=temp2,betahat = c(1,2,3),sebetahat = c(10,10,10))
plot(x,x_cdf[1,])
x_cdf = vapply(x,cdf_post,FUN.VALUE=c(1,1,1),m=temp2,betahat = c(-2,2,4),sebetahat = c(1,1,1))
plot(x,x_cdf[1,])
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
plot_dens(temp2)
plot_post_cdf(m,betahat=c(-2),sebetahat=1)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1)
source('~/Documents/git/ash/Rcode/mix.R')
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1)
source('~/Documents/git/ash/Rcode/mix.R')
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=10)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,add=TRUE)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,add=TRUE,col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,add=TRUE,col=2)
plot(x,x_cdf,type="l",xlab="x",ylab="cdf",...)
source('~/Documents/git/ash/Rcode/mix.R')
plot_post_cdf(temp2,betahat=c(-2),sebetahat=10)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,add=TRUE,col=2)
?plot
?add
??add
??new.plot
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,par(new=FALSE),col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=10)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,par(new=FALSE),col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,par(new="FALSE"),col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,new="FALSE",col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=10)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,new="FALSE",col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,col=2)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=10)
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,col=2,new=TRUE)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
plot(x,compdens_conv(temp2,x,0.01)[1,],type="l")
plot(x,compdens_conv(temp2,x,0.1)[2,],type="l")
plot(x,dens_conv(temp2,x,0.2),type="l")
plot(x,compdens_conv(temp1,x,0.01)[1,],type="l")
plot(x,mixcdf(temp,x),type="l")
plot(x,compdens_conv(temp,x,0.01)[1,],type="l")
source('~/Documents/git/ash/Rcode/mix.R')
temp = normalmix(c(0.5,0.5),c(-3,2),c(1,1))
x = seq(-5,5,length=100)
plot(x,dens(temp,x),type="l")
all.equal(compdens(temp,x),matdnorm(x, temp$mean,temp$sd))
plot(x,mixcdf(temp,x),type="l")
plot(x,compdens_conv(temp,x,0.01)[1,],type="l")
plot(x,compdens_conv(temp,x,0.1)[2,],type="l")
plot(x,dens_conv(temp,x,0.2),type="l")
temp2 = unimix(c(0.5,0.5),c(-3,3),c(-1,4))
source('~/Documents/git/ash/Rcode/mix.R')
temp = normalmix(c(0.5,0.5),c(-3,2),c(1,1))
x = seq(-5,5,length=100)
plot(x,dens(temp,x),type="l")
all.equal(compdens(temp,x),matdnorm(x, temp$mean,temp$sd))
plot(x,mixcdf(temp,x),type="l")
plot(x,compdens_conv(temp,x,0.01)[1,],type="l")
return(t(dnorm(outer(x,m$mean,FUN="-")/sdmat)/sdmat))
source('~/Documents/git/ash/Rcode/mix.R')
plot(x,dens(temp,x),type="l")
all.equal(compdens(temp,x),matdnorm(x, temp$mean,temp$sd))
plot(x,mixcdf(temp,x),type="l")
plot(x,compdens_conv(temp,x,0.01)[1,],type="l")
%%
?"%%"
if(length(s)==1){s=rep(s,length(x))}
source('~/Documents/git/ash/Rcode/mix.R')
sdmat = sqrt(outer(s^2,m$sd^2,FUN="+")) #n by k matrix of standard deviations of convolutions
plot(x,compdens_conv(temp,x,0.01)[1,],type="l")
plot(x,compdens_conv(temp,x,0.1)[2,],type="l")
plot(x,dens_conv(temp,x,0.2),type="l")
plot(x,dens_conv(temp,x,0.2),type="l")
plot(x,dens_conv(temp,x,0.001),type="l")
plot(x,dens_conv(temp,x,10),type="l")
plot(x,dens_conv(temp,x,0.001),type="l")
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/test.mix.R')
source("mix.R")
source('~/Documents/git/ash/Rcode/mix.R')
seed
set.seed(100)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
?print
print.float
methods(print)
??significant
print(1000.2425)
print(1000.2425,digits=5)
print(1000.2425,digits=10)
print(1000.2425,digits=20)
print(1000.2425,dp=20)
print(1000.2425,dp=1)
?digits
??digits
?prettyNum
source("ash.R")
set.seed(100)
#simulate n beta-hat values, nnull under the null
#with altmean and altsd being the mean and sd of beta under the alternative
simdata=function(n, nnull, altmean, altsd, betasd){
null = c(rep(1,nnull),rep(0,n-nnull))
beta = c(rep(0,nnull),rnorm(n-nnull,altmean,altsd))
betahat = rnorm(n,beta,betasd)
return(list(null=null,beta=beta,betahat=betahat,betasd=betasd))
}
ss = simdata(10000,8000,0,2,1)
system.time((beta.ash=ash(ss$betahat,ss$betasd)))
system.time((beta.ash.auto = ash(ss$betahat, ss$betasd,auto=TRUE)))
system.time((beta.ash.vb.uniform = ash(ss$betahat, ss$betasd,auto=TRUE, VB=TRUE, prior="uniform")))
system.time((beta.ash.vb.null = ash(ss$betahat, ss$betasd,auto=TRUE, VB=TRUE, prior=NULL)))
hist(ss$beta,prob=TRUE,breaks=seq(-7,7,length=20))
x= seq(-4,4,length=10000)
lines(x,density(beta.ash,x),col=2)
lines(x,density(beta.ash.auto,x),col=3)
lines(x,density(beta.ash.vb.uniform,x),col=4)
lines(x,density(beta.ash.vb.null,x),col=5)
beta.ash$fitted.f
beta.ash.auto$fitted.f
beta.ash.vb.uniform$fitted.f
ss = simdata(10000,10000,0,2,1)
system.time((beta.ash=ash(ss$betahat,ss$betasd)))
system.time((beta.ash.auto = ash(ss$betahat, ss$betasd,auto=TRUE)))
system.time((beta.ash.vb.uniform = ash(ss$betahat, ss$betasd,auto=TRUE, VB=TRUE, prior="uniform")))
source('~/Documents/git/ash/Rcode/ash.R')
source("ash.R")
set.seed(100)
#simulate n beta-hat values, nnull under the null
#with altmean and altsd being the mean and sd of beta under the alternative
simdata=function(n, nnull, altmean, altsd, betasd){
null = c(rep(1,nnull),rep(0,n-nnull))
beta = c(rep(0,nnull),rnorm(n-nnull,altmean,altsd))
betahat = rnorm(n,beta,betasd)
return(list(null=null,beta=beta,betahat=betahat,betasd=betasd))
}
ss = simdata(10000,8000,0,2,1)
beta.ash=ash(ss$betahat,ss$betasd)
source('~/Documents/git/ash/Rcode/ash.R')
source("ash.R")
set.seed(100)
#simulate n beta-hat values, nnull under the null
#with altmean and altsd being the mean and sd of beta under the alternative
simdata=function(n, nnull, altmean, altsd, betasd){
null = c(rep(1,nnull),rep(0,n-nnull))
beta = c(rep(0,nnull),rnorm(n-nnull,altmean,altsd))
betahat = rnorm(n,beta,betasd)
return(list(null=null,beta=beta,betahat=betahat,betasd=betasd))
}
ss = simdata(10000,8000,0,2,1)
beta.ash=ash(ss$betahat,ss$betasd)
time(post = posterior_dist(beta.ash$fitted.g,betahat,sebetahat))
time(post = posterior_dist(beta.ash$fitted.g,ss$betahat,ss$sebetahat))
beta.ash$fitted.g
post = posterior_dist(beta.ash$fitted.g,ss$betahat,ss$sebetahat)
ss$betahat
time(post = posterior_dist(beta.ash$fitted.g,ss$betahat,ss$betasd))
names(ss)
ss$betasd
time(post = posterior_dist(beta.ash$fitted.g,ss$betahat,rep(ss$betasd,length(ss$betahat))))
system.time(post = posterior_dist(beta.ash$fitted.g,ss$betahat,rep(ss$betasd,length(ss$betahat))))
system.time((post = posterior_dist(beta.ash$fitted.g,ss$betahat,rep(ss$betasd,length(ss$betahat)))))
system.time((PositiveProb = pnormmix(0,post$pi,post$mu,post$sigma,lower.tail=FALSE))
)
PositiveProb
PP2 = 1-cdf_post(beta.ash$fitted.g, 0, ss$betahat,rep(ss$betasd,length(ss$betahat)))
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
PP2 = 1-cdf_post(beta.ash$fitted.g, 0, ss$betahat,rep(ss$betasd,length(ss$betahat)))
plot(PP2,PositiveProb)
system.time((PP2 = 1-cdf_post(beta.ash$fitted.g, 0, ss$betahat,rep(ss$betasd,length(ss$betahat)))))
system.time((PositiveProb = pnormmix(0,post$pi,post$mu,post$sigma,lower.tail=FALSE)))
system.time((post = posterior_dist(beta.ash$fitted.g,ss$betahat,rep(ss$betasd,length(ss$betahat)))))
source('~/Documents/git/ash/Rcode/ash.R')
source('~/Documents/git/ash/Rcode/ash.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source("ash.R")
set.seed(100)
#simulate n beta-hat values, nnull under the null
#with altmean and altsd being the mean and sd of beta under the alternative
simdata=function(n, nnull, altmean, altsd, betasd){
null = c(rep(1,nnull),rep(0,n-nnull))
beta = c(rep(0,nnull),rnorm(n-nnull,altmean,altsd))
betahat = rnorm(n,beta,betasd)
return(list(null=null,beta=beta,betahat=betahat,betasd=betasd))
}
```
```{r}
ss = simdata(10000,8000,0,2,1)
beta.ash=ash(ss$betahat,ss$betasd)
system.time((post = posterior_dist(beta.ash$fitted.g,ss$betahat,rep(ss$betasd,length(ss$betahat)))))
system.time((PositiveProb = pnormmix(0,post$pi,post$mu,post$sigma,lower.tail=FALSE)))
system.time((PP2 = 1-cdf_post(beta.ash$fitted.g, 0, ss$betahat,rep(ss$betasd,length(ss$betahat)))))
```
all.equal(PP2,PositiveProb)
system.time((beta.ash=ash(ss$betahat,ss$betasd)))
summary(beta.ash)
source('~/Documents/git/ash/Rcode/ash.R')
system.time((beta.ash.auto = ash(ss$betahat, ss$betasd,auto=TRUE)))
source('~/Documents/git/ash/Rcode/ash.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
temp2
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
```{r}
dnorm
pnorm
?pnorm
install.packages("truncnorm")
library(truncnorm)
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm
?etruncnorm
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
?logp1
?logxp1
log1p
?log1p
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
plot_post_cdf(temp2,betahat=c(-2),sebetahat=1,col=2)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(-1,-2,0,1)
etruncnorm(-2,-3,0,1)
etruncnorm(-5,-6,0,1)
etruncnorm(-10,-11,0,1)
etruncnorm(-20,-30,0,1)
etruncnorm(-60,-90,0,1)
etruncnorm(-60,-79,0,1)
etruncnorm(-60,-70,0,1)
etruncnorm(-60,-30,0,1)
etruncnorm(-100,-30,0,1)
etruncnorm(-10000,-30,0,1)
etruncnorm(10000,30,0,1)
etruncnorm(1000,30,0,1)
etruncnorm(45,40,0,1)
etruncnorm(45,30,0,1)
etruncnorm(42,30,0,1)
etruncnorm(40,30,0,1)
etruncnorm(20,30,0,1)
etruncnorm(-20,-30,0,1)
etruncnorm(10,20,0,1)
etruncnorm(10,0,0,1)
etruncnorm(10,5,0,1)
etruncnorm(10,9,0,1)
etruncnorm(10,8,0,1)
etruncnorm(-10,-8,0,1)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
?etruncnorm
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
my_etruncnorm(-20,-10,4,3)
etruncnorm(-20,-10,4,3)
my_etruncnorm(-20,-10,4,3)
etruncnorm(-20,-10,4,3)
my_etruncnorm(-20,-10,4,3)
etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(10,20,0,1)
my_etruncnorm(-20,-10,0,1)
tmp
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(10,20,0,1)
my_etruncnorm(-20,-10,0,1)
?sign
sign(TRUE)
sign(FALSE)
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(10,20,0,1)
my_etruncnorm(-20,-10,0,1)
my_etruncnorm(-20,-10,5,1)
etruncnorm(-20,-10,5,1)
etruncnorm(-20,-10,0,1)
etruncnorm(-20,-10,5,5)
etruncnorm(-20,-10,5,0.1)
etruncnorm(-20,-10,5,0.2)
etruncnorm(-20,-10,5,0.3)
etruncnorm(-20,-10,5,0.4)
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(10,20,0,1)
my_etruncnorm(-20,-10,5,1)
etruncnorm(-20,-10,5,1)
my_etruncnorm(-20,-10,5,1)
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(10,20,0,1)
my_etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(-20,-10,0,1)
etruncnorm(-20,-10,5,1)
my_etruncnorm(-20,-10,5,1)
etruncnorm(-30,-20,5,1)
my_etruncnorm(-30,-20,5,1)
etruncnorm(-30,-20,5,2)
my_etruncnorm(-30,-20,5,2)
etruncnorm(-Inf,-30,5,2)
etruncnorm(-Inf,-40,0,1)
etruncnorm(-Inf,-30,0,1)
etruncnorm(-Inf,-34,0,1)
etruncnorm(-Inf,-36,0,1)
etruncnorm(-Inf,-38,0,1)
my_etruncnorm(-Inf,-38,0,1)
etruncnorm(-Inf,-38,0,1)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/mix.R')
etruncnorm(10,20,0,1)
my_etruncnorm(10,20,0,1)
etruncnorm(-20,-10,0,1)
my_etruncnorm(-20,-10,0,1)
etruncnorm(-20,-10,5,1)
my_etruncnorm(-20,-10,5,1)
etruncnorm(-30,-20,5,2)
my_etruncnorm(-30,-20,5,2)
etruncnorm(-Inf,-38,0,1)
my_etruncnorm(-Inf,-38,0,1)
etruncnorm(38,Inf,0,1)
my_etruncnorm(38,Inf,0,1)
source('~/Documents/git/ash/Rcode/mix.R')
source('~/Documents/git/ash/Rcode/ash.R')
source('~/Documents/git/ash/Rcode/ash.R')
install.packages("devtools", dependencies = TRUE)
library(devtools)
has_devel()
setwd("~/Documents/git/ash")
?create
setwd("~/Documents/git/ash/package")
library(devtools)
create()
tempdir
tempdir()
create("~/Documents/git/ash/package")
create("~/Documents/git/ash/package","ash")
create("~/Documents/git/ash/")
file.path(tempdir(), "myDefaultPackage")
path <- file.path(tempdir(), "myDefaultPackage")
create(path)
create("~/Documents/git/ash/package/ash")
create("~/Documents/git/ash/package/ashr")
source('~/Documents/git/ash/Rcode/ash.R')
?build
ash
q()
