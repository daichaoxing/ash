long_methodname("ash","hu")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(seed, methods$ash,"hu")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods)
methods
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods)
apply_method(seed, methods$ash,"hu")
args
methods$ash$flavorlist["hu"]
methods$ash$flavorlist$hu
?[]
?"[]"
?\[]
?\[
?[
??[]
??[
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods)
apply_method(seed, methods$ash,"hu")
apply_method(seed, methods$qval)
score_method(seed, methods$ash,score,"hu")
score_method(seed, methods$qval,score)
res=aggregate_results(methods,seed)
methodname
flavor
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(seed, methods$qval)
score_method(seed, methods$ash,score,"hu")
score_method(seed, methods$qval,score)
res=aggregate_results(methods,seed)
.fun
get_results(ashmethod,1:100)
seed
get_results(ashmethod,1:50)
get_one_result(1,ash)
resultsfile("ash",1)
get_one_result(1,ash)
q()
get_one_result(1,method$ash)
get_results(method$ash)
get_results(method$ash,1:50)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
get_results(method$ash,1:50)
get_results(method$ash,1:50,"hu")
get_results(method$ash,1:50,"u")
apply_method(seed, methods$ash,"u")
apply_method(seed, methods$ash,"u")
apply_method(seed, methods$qval)
score_method(seed, methods$ash,score,"hu")
score_method(seed, methods$ash,score, "u")
score_method(seed, methods$qval,score)
res=aggregate_results(methods,seed)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
res=aggregate_results(methods,seed)
res
aggregate(td~method,res,mean)
aggregate(td~method+flavor,res,mean)
aggregate(fd~method+flavor,res,mean)
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("plyr")
system("mkdir param")
system("mkdir data")
system("mkdir output")
system("mkdir output/ash")
system("mkdir output/qvalue")
system("mkdir results")
system("mkdir results/ash")
system("mkdir results/qvalue")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/run.R')
aggregate(td~method+flavor,res,mean)
aggregate(fd~method+flavor,res,mean)
qplot(fd~method+flavor,res,mean)
qplot(fd~td,facet~method+flavor,res,mean)
?qplot
library("ggplot2")
qplot(fd~td,facet~method+flavor,res,mean)
?qplot
qplot(fd,td,data=res)
qplot(fd,td,data=res,facets=method~.)
res
source('~/Dropbox/Documents/git/ash/dsc/run.R')
res
res$fdr=res$fd/(res$fd+res$td)
res
?qvalue
source('~/Dropbox/Documents/git/ash/dsc/methods/qvalue.wrapper.R')
get_pi0
source('~/Dropbox/Documents/git/ash/dsc/run.R')
res
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
factorial
?factorial
??factorial
?formula
?all.vars
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methodslist)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methodslist)
methods = system("ls methods",intern=TRUE)
for(m in 1:length(methods)){
source(file.path("methods",methods[m]))
}
seed = 1:10
l_ply(seed,parammaker)
l_ply(seed,datamaker)
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods)
make_directories(methods)
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/run.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
make_directories(methods,c("A","B"))
as.list(c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
make_directories(methods,c("A","B"))
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_directories(methods,c("A","B"))
?dply
??dply
??dplyr
?dplyr
?dplyr
library("dplyr")
library("plyr")
?dplyr
?plyr
?ddply
ddply(baseball[1:100,], ~ year, nrow)
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
# Note the use of the '.' function to allow
# group and sex to be used without quoting
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
names(dfx)
.(c(1,2),c(3,4))
?.
.(a, b, c)
.(first = a, second = b, third = c)
as.quoted(~ a + b + c)
as.quoted(a + b + c)
as.quoted(a ~ b + c)
?expand.factors
?expand
??expand
help(expand)
help("expand)
")"
)
"
"
""
"
"
"
melt(seed,scenario)
?melt
??melt
?reshape2
?reshape
??reshape
?ggplot2
??ggplot2
library("reshape2")
?melt
melt.data.frame
?melt.data.frame
?cast.data.frame
?cast.dataframe
?cast
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
aqm
?combinations
??combinations
??combinations
seed=1:10
scenario=c(A,B)
scenario=c("A","B")
combo = expand.grid(seed,scenario)
combo
combo = expand.grid(seed=seed,scenario=scenario)
combo
test=function(list){print(list$seed, list$scenario,list$seed)}
ddply(test,combo)
library(plyr)
ddply(test,combo)
test=function(list){print(list)}
ddply(test,combo)
ddply(combo,test)
?ddply
ddply(combo,.fun=test)
ddply(combo,.,.fun=test)
ddply(combo,.(seed,scenario),.fun=test)
test=function(list){list(a=scenario,b=seed)}
test=function(seed,scenario){list(a=scenario,b=seed)}
ddply(combo,.(seed,scenario),.fun=test)
mdply
mdply(combo,.(seed,scenario),.fun=test)
test
source('~/Dropbox/Documents/git/ash/dsc/parammaker.R')
combo = expand.grid(seed=seed,scenario=scenario)
d_ply(combo,parammaker)
combo
d_ply(combo,.(seed,scenario),parammaker)
library("ashr")
d_ply(combo,.(seed,scenario),parammaker)
scenario
seed
make_params = function(parammaker,seed,scenario){
combo = expand.grid(seed=seed,scenario=scenario)
d_ply(combo,.(seed,scenario),parammaker)
}
make_params(parammaker,seed,scenario)
make_params(parammaker,seed,scenario)
make_directories(methods,scenario)
make_params = function(parammaker,seed,scenario){
combo = expand.grid(seed=seed,scenario=scenario)
d_ply(combo,.(seed,scenario),parammaker)
}
make_params(parammaker,seed,scenario)
?expand.grid
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
test = list(A=c(1,2,3),B=c(4,5,6))
test
as.dataframe(list)
as.data.frame(list)
as.data.frame(test)
melt(test)
library(reshape2)
melt(test)
test = list(A=c(1,2,3),B=c(4,5,6,7))
melt(test)
?melt
melt(test,value="seed")
melt(test,value.name="seed")
test = list(A=c(1,2,3),B=c(9,5,6,7))
melt(test,value.name="seed")
melt(test,value.name="seed",name="scenario")
melt(test,value.name="seed",variable.name="scenario")
melt(test,value.name="seed",value.name="scenario")
melt.list(test,value.name="seed",value.name="scenario")
melt(test,value.name="seed",level=1)
melt(test,value.name="seed",level=2)
melt(test,value.name="seed",level="scenario")
make_params = function(parammaker,scenario_seedlist){
combo = melt(scenario_seedlist,value.name="seed")
names(combo)[2]="scenario"
d_ply(combo,.(seed,scenario),parammaker)
}
test
makeparams(parammaker,test)
make_params(parammaker,test)
make_params(parammaker,test)
make_directories()
make_directories(methods)
make_directories(methods,c("A","B"))
make_params(parammaker,test)
make_directories(methods,c("A","B"))
make_params(parammaker,test)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
seed = 1:10
scenario_seedlist = list(A=seed,B=seed)
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
source('~/Dropbox/Documents/git/ash/dsc/datamaker.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_data(datamaker,scenario_seedlist)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
make_data(datamaker,scenario_seedlist)
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
make_data(datamaker,scenario_seedlist)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(scenario_seedlist, methods$ash,"hu")
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
make_directories(methods,names(scenario_seedlist))
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("plyr")
#read in methods
methods = system("ls methods",intern=TRUE)
for(m in 1:length(methods)){
source(file.path("methods",methods[m]))
}
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
make_data(datamaker,scenario_seedlist)
apply_method(scenario_seedlist, methods$ash,"hu")
.variables
apply_method(scenario_seedlist, methods$ash,"hu")
methods$ash
methods$ash$flavorlist
apply_method(scenario_seedlist, methods$ash,"hu")
combo
flavor
method
debugSource('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(scenario_seedlist, methods$ash,"hu")
apply_method(scenario_seedlist, methods$ash,"hu")
apply_method(scenario_seedlist, methods$ash,"hu")
quit
apply_method(scenario_seedlist, methods$ash,"hu")
library("reshape2")
apply_method(scenario_seedlist, methods$ash,"hu")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(scenario_seedlist, methods$ash,"hu")
source('~/Dropbox/Documents/git/ash/dsc/parammaker.R')
library("ashr")
apply_method(scenario_seedlist, methods$ash,"hu")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(scenario_seedlist, methods$ash,"hu")
scenario
scenario_seedlist
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
apply_method(scenario_seedlist, methods$ash,"hu")
apply_method(1:10, methods$ash,"hu")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source("dsc.R")
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("plyr")
#read in methods
methods = system("ls methods",intern=TRUE)
for(m in 1:length(methods)){
source(file.path("methods",methods[m]))
}
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
indexlist
up
source('~/Dropbox/Documents/git/ash/dsc/parammaker.R')
parammaker
source('~/Dropbox/Documents/git/ash/dsc/datamaker.R')
make_params(parammaker,scenario_seedlist)
indexlist
combo
scenario_seedlist
make_params(parammaker,scenario_seedlist)
secenario_seedlist
scenario_seedlist
combo
source('~/Dropbox/Documents/git/ash/dsc/parammaker.R')
make_params(parammaker,scenario_seedlist)
source('~/Dropbox/Documents/git/ash/dsc/parammaker.R')
make_params(parammaker,scenario_seedlist)
make_params(parammaker,scenario_seedlist)
make_data(datamaker,scenario_seedlist)
source('~/Dropbox/Documents/git/ash/dsc/datamaker.R')
make_data(datamaker,scenario_seedlist)
apply_method(scenario_seedlist, methods$ash,"hu")
apply_method(scenario_seedlist, methods$ash,"u")
apply_method(scenario_seedlist, methods$qval)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
score_method(seed, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score,"hu")
scenario_seedlist
combo
indexlist
method$name
indexlist
flavor
debugSource('~/Dropbox/Documents/git/ash/dsc/dsc.R')
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(seed, methods$ash,score, "u")
score_method(seed, methods$qval,score)
score_method(scenario_seedlist, methods$ash,score, "u")
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("plyr")
library("ashr")
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score, "u")
score_method(scenario_seedlist, methods$qval,score)
res=aggregate_results(methods,seed)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
res=aggregate_results(methods,seed)
source('~/Dropbox/Documents/git/ash/dsc/dsc.R')
res=aggregate_results(methods,scenario_seedlist)
res=aggregate_results(methods,scenario_seedlist)
aggregate(td~method+flavor,res,mean)
aggregate(fd~method+flavor,res,mean)
res
aggregate(td~method+flavor+scenario,res,mean)
aggregate(fd~method+flavor+scenario,res,mean)
install.packages("/Users/stephens/Dropbox/Documents/git/dscr_0.1.tar.gz",repos=NULL,type="source")
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("plyr")
library("ashr")
library("dscr")
source("parammaker.R")
source("datamaker.R")
source("score.R")
library("dscr")
library("plyr")
library("ashr")
#read in methods
methods = system("ls methods",intern=TRUE)
for(m in 1:length(methods)){
source(file.path("methods",methods[m]))
}
seedA = 1:10
seedB= 101:111
scenario_seedlist = list(A=seedA,B=seedB)
methods=list()
ashflavorlist = list(hu=list(mixcompdist="halfunif",method="fdr")
,u=list(mixcompdist="uniform",method="fdr"))
methods$ash=list(name="ash",fn="ash.wrapper",flavorlist = ashflavorlist)
methods$qval = list(name="qvalue",fn="qvalue.wrapper")
make_directories(methods,names(scenario_seedlist))
make_params(parammaker,scenario_seedlist)
make_data(datamaker,scenario_seedlist)
apply_method(scenario_seedlist, methods$ash,"hu")
apply_method(scenario_seedlist, methods$ash,"u")
apply_method(scenario_seedlist, methods$qval)
score_method(scenario_seedlist, methods$ash,score,"hu")
score_method(scenario_seedlist, methods$ash,score, "u")
score_method(scenario_seedlist, methods$qval,score)
res=aggregate_results(methods,scenario_seedlist)
aggregate(td~method+flavor+scenario,res,mean)
aggregate(fd~method+flavor+scenario,res,mean)
